version: '3.8'

services:
  # Test Runner Service
  test-runner:
    build:
      context: ./frontend
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=test
      - CI=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - test-db
      - test-redis
    command: npm run test:unit
    profiles:
      - ci

  # Test Database
  test-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: test_disaster_response
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
    ports:
      - "5433:5432"
    volumes:
      - test_db_data:/var/lib/postgresql/data

  # Test Redis
  test-redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - test_redis_data:/data

  # Backend Tests
  backend-tests:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    environment:
      - TESTING=true
      - DATABASE_URL=postgresql://test_user:test_password@test-db:5432/test_disaster_response
      - REDIS_URL=redis://test-redis:6379
    depends_on:
      - test-db
      - test-redis
    command: python -m pytest tests/test_core.py -v --tb=short

  # Production Services (only start after tests pass)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/disaster_response
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
      - test-runner
      - backend-tests
    profiles:
      - production

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:80"
    depends_on:
      - test-runner
      - backend-tests
    profiles:
      - production

  # Production Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: disaster_response
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    profiles:
      - production

  # Production Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    profiles:
      - production

volumes:
  test_db_data:
  test_redis_data:
  db_data:
  redis_data:
