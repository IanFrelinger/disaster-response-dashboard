version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: disaster-response
    IMAGE_TAG: latest

phases:
  install:
    runtime-versions:
      docker: 20
    commands:
      - set -Eeuo pipefail
      - echo "Checking internet egress..."
      - time curl -IsSf https://deb.debian.org >/dev/null && echo "APT OK"
      - time curl -IsSf https://pypi.org >/dev/null && echo "PYPI OK"
      - echo "Logging in to ECR (us-east-2)..."
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 910230629863.dkr.ecr.us-east-2.amazonaws.com
      - export DOCKER_BUILDKIT=1
  build:
    commands:
      - echo "Building image..."
      - docker build --pull --progress=plain -t $IMAGE_REPO_NAME:$IMAGE_TAG -f Dockerfile.simple . 2>&1 | tee /tmp/docker-build.log
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG 910230629863.dkr.ecr.us-east-2.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo "Pushing image to ECR..."
      - docker push 910230629863.dkr.ecr.us-east-2.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo "Creating imagedefinitions.json..."
      - printf '[{"name":"disaster-response","imageUri":"%s"}]' "910230629863.dkr.ecr.us-east-2.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG" > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
