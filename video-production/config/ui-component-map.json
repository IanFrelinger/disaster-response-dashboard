{
  "timestamp": "2025-08-19T13:58:15.598Z",
  "frontendPath": "/Users/ianfrelinger/PycharmProjects/disaster-response-dashboard/frontend/src",
  "components": [
    {
      "name": "AIPDecisionSupport",
      "file": "AIPDecisionSupport.tsx",
      "type": "component",
      "interactions": [
        {
          "type": "click",
          "target": "button/div",
          "description": "Click interaction detected",
          "action": "onClick handler"
        },
        {
          "type": "hover",
          "target": "element",
          "description": "Hover interaction detected",
          "action": "onMouseEnter/onMouseLeave"
        },
        {
          "type": "hover",
          "target": "element",
          "description": "Hover interaction detected",
          "action": "onMouseEnter/onMouseLeave"
        },
        {
          "type": "input",
          "target": "input/form",
          "description": "Input interaction detected",
          "action": "onChange/onInput/onSubmit"
        },
        {
          "type": "input",
          "target": "input/form",
          "description": "Input interaction detected",
          "action": "onChange/onInput/onSubmit"
        },
        {
          "type": "scroll",
          "target": "container",
          "description": "Scroll interaction detected",
          "action": "onScroll handler or scrollIntoView"
        }
      ],
      "props": [
        "onDecisionMade?",
        "className?",
        "onDecisionMade",
        "className = ''"
      ],
      "state": [
        "null",
        "query",
        "isProcessing",
        "currentGuidance",
        "chatHistory",
        "showAlternatives"
      ],
      "cssClasses": [],
      "description": "AI-powered decision support component"
    },
    {
      "name": "BuildingEvacuationTracker",
      "file": "BuildingEvacuationTracker.tsx",
      "type": "component",
      "interactions": [
        {
          "type": "click",
          "target": "button/div",
          "description": "Click interaction detected",
          "action": "onClick handler"
        }
      ],
      "props": [
        "zones",
        "buildings",
        "onZoneUpdate?",
        "onBuildingUpdate?",
        "className?",
        "onZoneUpdate",
        "onBuildingUpdate",
        "className = ''"
      ],
      "state": [
        "null",
        "null",
        "'zones'",
        "selectedZone",
        "selectedBuilding",
        "viewMode"
      ],
      "cssClasses": [
        "ios-card",
        "ios-container",
        "ios-flex-between",
        "ios-headline",
        "ios-caption",
        "ios-flex",
        "zones-overview",
        "zones-grid",
        "zone-header",
        "priority-badge",
        "zone-progress",
        "progress-bar",
        "progress-fill",
        "progress-stats",
        "percentage",
        "counts",
        "zone-details",
        "detail-item",
        "label",
        "value",
        "buildings-detail",
        "buildings-grid",
        "building-header",
        "building-info",
        "info-row",
        "special-needs",
        "building-notes",
        "modal-overlay",
        "modal-content",
        "modal-header",
        "zone-detail-content",
        "zone-progress-detail",
        "progress-breakdown",
        "progress-item",
        "status",
        "evacuated",
        "count",
        "in-progress",
        "refused",
        "no-contact",
        "unchecked",
        "zone-assignments",
        "units-list",
        "unit-item",
        "zone-timeline",
        "timeline-item",
        "time",
        "event",
        "building-detail-content",
        "building-status",
        "status-actions",
        "building-details",
        "detail-grid",
        "special-needs-section",
        "needs-list",
        "need-item",
        "notes-section",
        "notes-content",
        "notes-meta"
      ],
      "description": "Evacuation planning and tracking component"
    },
    {
      "name": "ChallengeDemo",
      "file": "ChallengeDemo.tsx",
      "type": "component",
      "interactions": [],
      "props": [],
      "state": [],
      "cssClasses": [
        "ios-card",
        "ios-container",
        "ios-flex-between",
        "ios-headline",
        "ios-caption",
        "ios-flex",
        "large",
        "ios-body",
        "ios-subheadline"
      ],
      "description": "Challenge demo and presentation component"
    },
    {
      "name": "DrillDownCapability",
      "file": "DrillDownCapability.tsx",
      "type": "component",
      "interactions": [
        {
          "type": "click",
          "target": "button/div",
          "description": "Click interaction detected",
          "action": "onClick handler"
        }
      ],
      "props": [
        "detailLevels",
        "currentZoom",
        "currentLocation",
        "onZoomChange?",
        "onLocationSelect?",
        "className?",
        "onZoomChange",
        "onLocationSelect",
        "className = ''"
      ],
      "state": [
        "'county'",
        "currentLocation",
        "selectedDetailLevel",
        "expandedSections",
        "selectedLocation"
      ],
      "cssClasses": [
        "location-overview",
        "overview-header",
        "ios-title",
        "overview-stats",
        "overview-item",
        "item-label",
        "item-value",
        "detail-level-header",
        "header-content",
        "level-icon",
        "level-title",
        "level-name",
        "header-actions",
        "expand-icon",
        "detail-level-content",
        "level-overview",
        "overview-grid",
        "level-actions",
        "ios-button",
        "primary",
        "small",
        "secondary",
        "ios-card",
        "ios-container",
        "ios-flex-between",
        "ios-headline",
        "ios-caption",
        "ios-flex",
        "zoom-controls",
        "zoom-label",
        "zoom-buttons",
        "zoom-button",
        "location-breadcrumb",
        "breadcrumb-item",
        "breadcrumb-separator",
        "active",
        "current-detail-level",
        "level-indicator",
        "level-description",
        "detail-levels",
        "detail-description",
        "detail-levels-container",
        "zoom-guide",
        "zoom-levels-grid",
        "zoom-level",
        "zoom-header",
        "zoom-range",
        "zoom-icon",
        "zoom-content",
        "interactive-features",
        "features-grid",
        "feature-item",
        "feature-icon",
        "feature-title",
        "feature-description"
      ],
      "description": "Drill-down capability for detailed analysis"
    },
    {
      "name": "EfficiencyMetrics",
      "file": "EfficiencyMetrics.tsx",
      "type": "component",
      "interactions": [
        {
          "type": "click",
          "target": "button/div",
          "description": "Click interaction detected",
          "action": "onClick handler"
        }
      ],
      "props": [
        "metrics",
        "onMetricsUpdate?",
        "className?",
        "onMetricsUpdate",
        "className = ''"
      ],
      "state": [
        "null",
        "'overview'",
        "selectedMetric",
        "viewMode"
      ],
      "cssClasses": [
        "ios-card",
        "ios-container",
        "ios-flex-between",
        "ios-headline",
        "ios-caption",
        "ios-flex",
        "metrics-overview",
        "summary-cards",
        "summary-card",
        "lives-saved",
        "card-icon",
        "card-content",
        "card-value",
        "card-label",
        "card-subtitle",
        "time-saved",
        "efficiency-gain",
        "property-value",
        "key-metrics",
        "metrics-grid",
        "metric-card",
        "decision-speed",
        "metric-header",
        "metric-icon",
        "metric-title",
        "metric-comparison",
        "comparison-before",
        "comparison-label",
        "comparison-value",
        "comparison-arrow",
        "comparison-after",
        "metric-savings",
        "savings-label",
        "savings-value",
        "metric-impact",
        "impact-label",
        "impact-value",
        "resource-utilization",
        "response-time",
        "metric-improvement",
        "improvement-label",
        "improvement-value",
        "metrics-detailed",
        "detailed-metrics",
        "detailed-metric",
        "metric-breakdown",
        "breakdown-item",
        "breakdown-label",
        "breakdown-value",
        "saved",
        "improvement",
        "impact",
        "freed",
        "metrics-projections",
        "projections-grid",
        "projection-card",
        "projection-header",
        "projection-icon",
        "projection-title",
        "projection-main",
        "projection-estimate",
        "projection-confidence",
        "confidence-label",
        "confidence-value",
        "projection-description",
        "injuries-reduced",
        "property-saved",
        "impact-summary",
        "impact-stats",
        "impact-stat",
        "stat-label",
        "stat-value",
        "real-time-updates",
        "update-status",
        "status-indicator",
        "status-dot",
        "active",
        "status-text",
        "last-update"
      ],
      "description": "Efficiency metrics and analytics component"
    },
    {
      "name": "EvacuationDashboard",
      "file": "EvacuationDashboard.tsx",
      "type": "page",
      "interactions": [
        {
          "type": "click",
          "target": "button/div",
          "description": "Click interaction detected",
          "action": "onClick handler"
        }
      ],
      "props": [
        "zones",
        "buildings",
        "weatherData?",
        "onZoneSelect?",
        "onBuildingSelect?",
        "onStatusUpdate?",
        "className?",
        "weatherData",
        "onZoneSelect",
        "onBuildingSelect",
        "onStatusUpdate",
        "className = ''"
      ],
      "state": [
        "null",
        "null",
        "'zones'",
        "'all'",
        "selectedZone",
        "selectedBuilding",
        "viewMode",
        "filterStatus"
      ],
      "cssClasses": [
        "ios-card",
        "ios-container",
        "ios-flex-between",
        "ios-headline",
        "ios-caption",
        "ios-flex",
        "zones-overview",
        "zones-grid",
        "zone-card",
        "zone-header",
        "zone-stats",
        "stat",
        "label",
        "value",
        "progress-section",
        "progress-bar",
        "progress-segment",
        "evacuated",
        "in-progress",
        "refused",
        "no-contact",
        "unchecked",
        "progress-legend",
        "legend-item",
        "legend-color",
        "zone-footer",
        "completion-estimate",
        "assigned-units",
        "weather-view",
        "view-header",
        "weather-grid",
        "weather-stats-grid",
        "weather-stat",
        "stat-label",
        "stat-value",
        "impact-grid",
        "impact-item",
        "impact-label",
        "impact-value",
        "forecast-content",
        "red-flag-warning",
        "forecast-item",
        "forecast-label",
        "forecast-value",
        "building-overview-view",
        "building-overview-grid",
        "overview-stats",
        "overview-stat",
        "zone-summary-list",
        "zone-summary-item",
        "zone-summary-header",
        "zone-name",
        "zone-priority",
        "zone-summary-stats",
        "zone-progress-bar",
        "zone-progress-fill",
        "aip-view",
        "routing-view",
        "units-view",
        "architecture-view"
      ],
      "description": "Main dashboard component for evacuation management"
    },
    {
      "name": "MultiHazardMap",
      "file": "MultiHazardMap.tsx",
      "type": "component",
      "interactions": [
        {
          "type": "click",
          "target": "button/div",
          "description": "Click interaction detected",
          "action": "onClick handler"
        },
        {
          "type": "input",
          "target": "input/form",
          "description": "Input interaction detected",
          "action": "onChange/onInput/onSubmit"
        }
      ],
      "props": [
        "hazards",
        "onHazardSelect?",
        "onHazardUpdate?",
        "className?",
        "onHazardSelect",
        "onHazardUpdate",
        "className = ''"
      ],
      "state": [
        "null",
        "'overview'",
        "selectedHazard",
        "activeLayers",
        "viewMode"
      ],
      "cssClasses": [
        "hazard-geometry",
        "fire-hazard",
        "fire-active",
        "fire-predicted-1hr",
        "fire-predicted-3hr",
        "flood-hazard",
        "flood-current",
        "flood-details",
        "flood-projected",
        "earthquake-hazard",
        "earthquake-epicenter",
        "earthquake-details",
        "chemical-hazard",
        "chemical-dispersion",
        "chemical-details",
        "ios-card",
        "ios-container",
        "ios-flex-between",
        "ios-headline",
        "ios-caption",
        "ios-flex",
        "layer-controls",
        "layer-toggle",
        "layer-icon",
        "layer-label",
        "layer-count",
        "hazard-map-container",
        "hazard-map",
        "hazard-header",
        "hazard-icon",
        "hazard-type",
        "hazard-info",
        "hazard-location",
        "hazard-time",
        "hazard-area",
        "hazard-updated",
        "hazard-details-panel",
        "ios-button",
        "secondary",
        "small",
        "hazard-details",
        "detail-row",
        "label",
        "value",
        "type-specific-details",
        "hazard-actions",
        "primary",
        "hazard-summary",
        "summary-stats",
        "stat-item",
        "stat-label",
        "stat-value",
        "critical",
        "active",
        "contained"
      ],
      "description": "Interactive map component for hazard visualization"
    },
    {
      "name": "RoleBasedRouting",
      "file": "RoleBasedRouting.tsx",
      "type": "component",
      "interactions": [
        {
          "type": "click",
          "target": "button/div",
          "description": "Click interaction detected",
          "action": "onClick handler"
        },
        {
          "type": "input",
          "target": "input/form",
          "description": "Input interaction detected",
          "action": "onChange/onInput/onSubmit"
        }
      ],
      "props": [
        "routes",
        "units",
        "stagingAreas",
        "onRouteSelect?",
        "onRouteUpdate?",
        "className?",
        "onRouteSelect",
        "onRouteUpdate",
        "className = ''"
      ],
      "state": [
        "null",
        "'CIVILIAN_EVACUATION'",
        "'routes'",
        "selectedRoute",
        "activeProfile",
        "viewMode",
        "showDeconflicted"
      ],
      "cssClasses": [
        "ios-card",
        "ios-container",
        "ios-flex-between",
        "ios-headline",
        "ios-caption",
        "ios-flex",
        "profile-selector",
        "profile-icon",
        "profile-name",
        "profile-details",
        "profile-info",
        "info-row",
        "label",
        "value",
        "filters",
        "filter-toggle",
        "routes-view",
        "routes-grid",
        "route-header",
        "route-profile",
        "route-status",
        "status-icon",
        "status-text",
        "route-info",
        "route-points",
        "point",
        "start",
        "coordinates",
        "end",
        "route-metrics",
        "metric",
        "route-details",
        "deconfliction-status",
        "assigned-units",
        "staging-areas",
        "units-view",
        "units-grid",
        "unit-card",
        "unit-header",
        "unit-type",
        "unit-info",
        "unit-location",
        "unit-assignment",
        "assigned",
        "unassigned",
        "unit-capabilities",
        "staging-view",
        "staging-grid",
        "staging-card",
        "staging-header",
        "staging-type",
        "staging-capacity",
        "staging-info",
        "staging-location",
        "staging-access",
        "staging-facilities",
        "deconfliction-view",
        "deconfliction-stats",
        "stat-item",
        "stat-label",
        "stat-value",
        "deconflicted",
        "needs-deconfliction",
        "deconfliction-list",
        "deconfliction-item",
        "conflict-info",
        "route-id",
        "conflict-type",
        "ios-button",
        "primary",
        "small",
        "route-details-panel",
        "secondary",
        "route-details-content",
        "detail-section",
        "detail-grid",
        "detail-item",
        "units-list",
        "unit-item",
        "unit-id",
        "unit-status",
        "staging-list",
        "staging-item",
        "staging-id",
        "route-actions"
      ],
      "description": "Route planning and optimization component"
    },
    {
      "name": "SearchMarkings",
      "file": "SearchMarkings.tsx",
      "type": "component",
      "interactions": [
        {
          "type": "click",
          "target": "button/div",
          "description": "Click interaction detected",
          "action": "onClick handler"
        },
        {
          "type": "input",
          "target": "input/form",
          "description": "Input interaction detected",
          "action": "onChange/onInput/onSubmit"
        }
      ],
      "props": [
        "searchMarkings",
        "onMarkingCreate?",
        "onMarkingUpdate?",
        "onMarkingDelete?",
        "className?",
        "onMarkingCreate",
        "onMarkingUpdate",
        "onMarkingDelete",
        "className = ''"
      ],
      "state": [
        "null",
        "'overview'",
        "selectedMarking",
        "viewMode",
        "newMarking"
      ],
      "cssClasses": [
        "search-code-visual",
        "code-grid",
        "code-cell",
        "top",
        "left",
        "center",
        "right",
        "bottom",
        "code-legend",
        "legend-item",
        "legend-label",
        "legend-value",
        "ios-card",
        "ios-container",
        "ios-flex-between",
        "ios-headline",
        "ios-caption",
        "ios-flex",
        "quick-marking-interface",
        "quick-marking-description",
        "quick-buttons",
        "quick-button",
        "clear",
        "button-icon",
        "button-label",
        "button-description",
        "hazard",
        "victims",
        "create-marking",
        "marking-form",
        "form-section",
        "form-row",
        "form-label",
        "form-input",
        "search-code-form",
        "code-input-row",
        "code-input",
        "code-label",
        "center-input",
        "form-checkbox",
        "form-select",
        "form-textarea",
        "form-actions",
        "ios-button",
        "secondary",
        "primary",
        "markings-overview",
        "markings-grid",
        "marking-card",
        "marking-header",
        "marking-id",
        "marking-team",
        "marking-search-code",
        "marking-assessment",
        "assessment-item",
        "assessment-label",
        "assessment-value",
        "marking-meta",
        "meta-item",
        "meta-label",
        "meta-value",
        "marking-notes",
        "marking-details",
        "small",
        "marking-details-content",
        "detail-section",
        "detail-grid",
        "detail-item",
        "label",
        "value",
        "notes-content",
        "marking-actions",
        "danger",
        "fema-legend",
        "legend-content",
        "legend-grid"
      ],
      "description": "Search and marking functionality component"
    },
    {
      "name": "TechnicalArchitecture",
      "file": "TechnicalArchitecture.tsx",
      "type": "component",
      "interactions": [
        {
          "type": "click",
          "target": "button/div",
          "description": "Click interaction detected",
          "action": "onClick handler"
        },
        {
          "type": "zoom",
          "target": "map",
          "description": "Map zoom interaction",
          "action": "Scroll wheel or zoom controls"
        },
        {
          "type": "pan",
          "target": "map",
          "description": "Map pan interaction",
          "action": "Drag to move map view"
        }
      ],
      "props": [
        "className?",
        "className = ''"
      ],
      "state": [
        "'overview'",
        "null",
        "activeView",
        "selectedComponent"
      ],
      "cssClasses": [
        "ios-card",
        "ios-container",
        "ios-flex-between",
        "ios-headline",
        "ios-caption",
        "ios-flex",
        "architecture-content",
        "overview-view",
        "view-header",
        "components-grid",
        "component-header",
        "component-type",
        "component-status",
        "status-icon",
        "status-text",
        "component-name",
        "component-description",
        "component-technologies",
        "technology-tag",
        "data-flow-view",
        "flow-diagram",
        "flow-item",
        "flow-header",
        "flow-name",
        "flow-arrow",
        "flow-details",
        "flow-source",
        "label",
        "value",
        "flow-destination",
        "flow-data",
        "data-types",
        "data-type-tag",
        "flow-metrics",
        "metric",
        "foundry-view",
        "features-grid",
        "feature-header",
        "feature-name",
        "feature-status",
        "feature-description",
        "feature-benefits",
        "benefits-list",
        "benefit-tag",
        "metrics-view",
        "metrics-categories",
        "category-section",
        "category-title",
        "metrics-grid",
        "metric-card",
        "metric-name",
        "metric-comparison",
        "metric-before",
        "metric-after",
        "metric-improvement",
        "improvement",
        "component-details-panel",
        "ios-button",
        "secondary",
        "small",
        "component-details-content",
        "detail-section",
        "detail-grid",
        "detail-item",
        "specs-list",
        "spec-item",
        "integration-list",
        "integration-item",
        "component-actions",
        "primary"
      ],
      "description": "Technical architecture and system information component"
    },
    {
      "name": "UnitManagement",
      "file": "UnitManagement.tsx",
      "type": "component",
      "interactions": [
        {
          "type": "click",
          "target": "button/div",
          "description": "Click interaction detected",
          "action": "onClick handler"
        },
        {
          "type": "input",
          "target": "input/form",
          "description": "Input interaction detected",
          "action": "onChange/onInput/onSubmit"
        }
      ],
      "props": [
        "units",
        "zones",
        "routes",
        "onUnitAssign?",
        "onUnitStatusUpdate?",
        "className?",
        "onUnitAssign",
        "onUnitStatusUpdate",
        "className = ''"
      ],
      "state": [
        "null",
        "null",
        "'units'",
        "'all'",
        "'all'",
        "selectedUnit",
        "dragTarget",
        "viewMode",
        "filterType",
        "filterStatus"
      ],
      "cssClasses": [
        "ios-card",
        "ios-container",
        "ios-flex-between",
        "ios-headline",
        "ios-caption",
        "ios-flex",
        "stats-grid",
        "stat-item",
        "stat-value",
        "stat-label",
        "filters",
        "filter-group",
        "filter-select",
        "units-view",
        "units-grid",
        "unit-header",
        "unit-type",
        "unit-icon",
        "unit-name",
        "unit-status",
        "status-icon",
        "status-text",
        "unit-info",
        "unit-details",
        "detail-item",
        "label",
        "value",
        "unit-capabilities",
        "capabilities-list",
        "capability-tag",
        "capability-more",
        "unit-assignment",
        "assigned",
        "unassigned",
        "assignments-view",
        "assignment-section",
        "zones-grid",
        "zone-drop-zone",
        "zone-header",
        "zone-name",
        "zone-priority",
        "zone-info",
        "zone-stats",
        "assigned-units",
        "assigned-unit",
        "unit-id",
        "routes-grid",
        "route-drop-zone",
        "route-header",
        "route-name",
        "route-status",
        "route-info",
        "route-stats",
        "status-view",
        "status-grid",
        "status-card",
        "status-header",
        "current-status",
        "status-controls",
        "status-select",
        "capabilities-view",
        "capabilities-grid",
        "capability-card",
        "capability-header",
        "capability-icon",
        "capability-name",
        "capability-details",
        "capability-stats",
        "unit-details-panel",
        "ios-button",
        "secondary",
        "small",
        "unit-details-content",
        "detail-section",
        "detail-grid",
        "assignment-info",
        "assignment-item",
        "unit-actions",
        "primary"
      ],
      "description": "Unit and resource management component"
    },
    {
      "name": "WeatherPanel",
      "file": "WeatherPanel.tsx",
      "type": "component",
      "interactions": [
        {
          "type": "click",
          "target": "button/div",
          "description": "Click interaction detected",
          "action": "onClick handler"
        }
      ],
      "props": [
        "weatherData",
        "onWeatherAlert?",
        "className?",
        "onWeatherAlert",
        "className = ''"
      ],
      "state": [
        "null",
        "expanded",
        "selectedAlert"
      ],
      "cssClasses": [
        "ios-card",
        "ios-container",
        "ios-flex-between",
        "ios-headline",
        "ios-caption",
        "ios-flex",
        "ios-button",
        "secondary",
        "small",
        "current-conditions",
        "main-metrics",
        "metric",
        "temp",
        "value",
        "label",
        "humidity",
        "wind",
        "fire-weather-index",
        "index-header",
        "icon",
        "index-gauge",
        "index-value",
        "index-description",
        "wind-section",
        "wind-rose",
        "wind-arrow",
        "wind-speed",
        "wind-cardinal",
        "wind-gusts",
        "wind-impact",
        "impact-label",
        "impact-value",
        "fire-behavior-prediction",
        "prediction-header",
        "prediction-behavior",
        "prediction-recommendations",
        "recommendation",
        "forecast-section",
        "alert",
        "critical",
        "warning-details",
        "forecast-timeline",
        "forecast-item",
        "time",
        "event",
        "impact",
        "alerts-section",
        "alert-type",
        "alert-message",
        "alert-time",
        "alert-modal",
        "alert-content",
        "alert-details",
        "critical-warning",
        "immediate-actions"
      ],
      "description": "Weather data display and integration component"
    },
    {
      "name": "Enhanced3DTerrain",
      "file": "Enhanced3DTerrain.tsx",
      "type": "component",
      "interactions": [
        {
          "type": "click",
          "target": "button/div",
          "description": "Click interaction detected",
          "action": "onClick handler"
        },
        {
          "type": "input",
          "target": "input/form",
          "description": "Input interaction detected",
          "action": "onChange/onInput/onSubmit"
        },
        {
          "type": "zoom",
          "target": "map",
          "description": "Map zoom interaction",
          "action": "Scroll wheel or zoom controls"
        },
        {
          "type": "pan",
          "target": "map",
          "description": "Map pan interaction",
          "action": "Drag to move map view"
        }
      ],
      "props": [
        "mapboxAccessToken",
        "initialCenter?",
        "initialZoom?",
        "showDisasterResponse?",
        "hazards?",
        "weather?",
        "buildings?",
        "evacuationZones?",
        "routes?",
        "units?",
        "onMapLoad?",
        "onHazardClick?",
        "onBuildingClick?",
        "onRouteClick?",
        "onUnitClick?",
        "className?",
        "container: mapContainer.current",
        "style: 'mapbox://styles/mapbox/satellite-streets-v12'",
        "center: initialCenter",
        "zoom: initialZoom",
        "pitch: 45",
        "bearing: 0",
        "antialias: true",
        "preserveDrawingBuffer: true"
      ],
      "state": [
        "isMapLoaded",
        "showTerrainControls"
      ],
      "cssClasses": [
        "terrain-controls",
        "terrain-options",
        "terrain-option",
        "terrain-btn",
        "map-container",
        "terrain-controls-overlay",
        "loading-overlay",
        "loading-spinner",
        "spinner"
      ],
      "description": "AI-powered decision support component"
    },
    {
      "name": "LiveHazardMap",
      "file": "LiveHazardMap.tsx",
      "type": "component",
      "interactions": [
        {
          "type": "zoom",
          "target": "map",
          "description": "Map zoom interaction",
          "action": "Scroll wheel or zoom controls"
        },
        {
          "type": "pan",
          "target": "map",
          "description": "Map pan interaction",
          "action": "Drag to move map view"
        }
      ],
      "props": [
        "showPredictions?",
        "show3D?",
        "autoUpdate?",
        "autoUpdate = true"
      ],
      "state": [
        "new Date(",
        "showHazards",
        "showUnits",
        "showRoutes",
        "showAnalytics",
        "showWeather",
        "lastUpdate"
      ],
      "cssClasses": [
        "ios-card",
        "ios-container",
        "ios-flex-between",
        "ios-headline",
        "ios-caption",
        "ios-flex",
        "w-4",
        "h-4"
      ],
      "description": "Interactive map component for hazard visualization"
    },
    {
      "name": "Mapbox3DTerrain",
      "file": "Mapbox3DTerrain.tsx",
      "type": "component",
      "interactions": [
        {
          "type": "click",
          "target": "button/div",
          "description": "Click interaction detected",
          "action": "onClick handler"
        },
        {
          "type": "input",
          "target": "input/form",
          "description": "Input interaction detected",
          "action": "onChange/onInput/onSubmit"
        },
        {
          "type": "zoom",
          "target": "map",
          "description": "Map zoom interaction",
          "action": "Scroll wheel or zoom controls"
        },
        {
          "type": "pan",
          "target": "map",
          "description": "Map pan interaction",
          "action": "Drag to move map view"
        }
      ],
      "props": [
        "center?",
        "zoom?",
        "pitch?",
        "bearing?",
        "showHazards?",
        "showUnits?",
        "showRoutes?",
        "showAnalytics?",
        "showBuildings?",
        "showTerrain?",
        "onMapLoad?",
        "onHazardClick?",
        "onUnitClick?",
        "onRouteClick?",
        "className?",
        "center = [-122.4194",
        "37.7749]",
        "zoom = 15",
        "pitch = 60",
        "bearing = 0",
        "showHazards = true",
        "showUnits = true",
        "showRoutes = true",
        "showAnalytics = true",
        "showBuildings = true",
        "showTerrain = true",
        "onMapLoad",
        "onHazardClick",
        "onUnitClick",
        "onRouteClick",
        "className = ''"
      ],
      "state": [
        "'dark'",
        "isLoading",
        "isRefreshing",
        "mapStyle",
        "localShowTerrain",
        "localShowBuildings",
        "localShowHazards",
        "localShowUnits",
        "localShowRoutes"
      ],
      "cssClasses": [
        "w-full",
        "h-full",
        "rounded-lg",
        "overflow-hidden",
        "bg-gray-800",
        "border",
        "border-gray-600",
        "absolute",
        "inset-0",
        "bg-black",
        "bg-opacity-50",
        "flex",
        "items-center",
        "justify-center",
        "z-10",
        "text-white",
        "text-center",
        "animate-spin",
        "rounded-full",
        "h-12",
        "w-12",
        "border-b-2",
        "border-white",
        "mx-auto",
        "mb-4",
        "ios-card",
        "ios-subheadline",
        "ios-segmented-control",
        "ios-flex",
        "ios-input",
        "w-3",
        "h-3",
        "ios-caption",
        "ios-button",
        "ios-spinner",
        "w-4",
        "h-4",
        "ios-flex-between"
      ],
      "description": "Interactive map component for hazard visualization"
    },
    {
      "name": "SimpleMapboxTest",
      "file": "SimpleMapboxTest.tsx",
      "type": "component",
      "interactions": [
        {
          "type": "click",
          "target": "button/div",
          "description": "Click interaction detected",
          "action": "onClick handler"
        },
        {
          "type": "input",
          "target": "input/form",
          "description": "Input interaction detected",
          "action": "onChange/onInput/onSubmit"
        },
        {
          "type": "zoom",
          "target": "map",
          "description": "Map zoom interaction",
          "action": "Scroll wheel or zoom controls"
        },
        {
          "type": "pan",
          "target": "map",
          "description": "Map pan interaction",
          "action": "Drag to move map view"
        }
      ],
      "props": [
        "showHazards?",
        "showUnits?",
        "showRoutes?",
        "showBuildings?",
        "showTerrain?",
        "showAnalytics?",
        "showWeather?",
        "weatherData?",
        "showHazards: initialShowHazards = true",
        "showUnits: initialShowUnits = true",
        "showRoutes: initialShowRoutes = true",
        "showBuildings: initialShowBuildings = true",
        "showTerrain: initialShowTerrain = true",
        "showAnalytics: initialShowAnalytics = true",
        "showWeather: initialShowWeather = true",
        "weatherData"
      ],
      "state": [
        "null",
        "{\n    visible: false,\n    content: '',\n    x: 0,\n    y: 0\n  }",
        "mapLoaded",
        "buildingsAdded",
        "terrainAdded",
        "escapeRouteAdded",
        "hazardsAdded",
        "unitsAdded",
        "error",
        "tooltip",
        "showHazards",
        "showUnits",
        "showRoutes",
        "showAnalytics",
        "showWeather",
        "showEvacuationZones"
      ],
      "cssClasses": [
        "weather-legend",
        "simple-mapbox-test",
        "mapbox-container",
        "ios-caption",
        "ios-spinner",
        "layer-controls"
      ],
      "description": "Interactive map component for hazard visualization"
    }
  ],
  "navigation": [
    {
      "name": "Evacuation Dashboard",
      "route": "/dashboard",
      "component": "EvacuationDashboard",
      "description": "Main evacuation management interface"
    },
    {
      "name": "Multi-Hazard Map",
      "route": "/map",
      "component": "MultiHazardMap",
      "description": "Interactive hazard visualization"
    },
    {
      "name": "AI Decision Support",
      "route": "/ai-support",
      "component": "AIPDecisionSupport",
      "description": "AI-powered operational guidance"
    },
    {
      "name": "Unit Management",
      "route": "/units",
      "component": "UnitManagement",
      "description": "Emergency unit coordination"
    },
    {
      "name": "Role-Based Routing",
      "route": "/routing",
      "component": "RoleBasedRouting",
      "description": "Route optimization and planning"
    },
    {
      "name": "Building Tracker",
      "route": "/buildings",
      "component": "BuildingEvacuationTracker",
      "description": "Building evacuation status tracking"
    },
    {
      "name": "Weather Panel",
      "route": "/weather",
      "component": "WeatherPanel",
      "description": "Real-time weather integration"
    },
    {
      "name": "Technical Architecture",
      "route": "/architecture",
      "component": "TechnicalArchitecture",
      "description": "System architecture overview"
    }
  ],
  "dataFlow": [
    {
      "from": "MultiHazardMap",
      "to": "EvacuationDashboard",
      "dataType": "HazardLayer[]",
      "description": "Real-time hazard data flows to dashboard for evacuation planning"
    },
    {
      "from": "WeatherPanel",
      "to": "MultiHazardMap",
      "dataType": "WeatherData",
      "description": "Weather conditions influence hazard visualization and routing"
    },
    {
      "from": "AIPDecisionSupport",
      "to": "EvacuationDashboard",
      "dataType": "OperationalGuidance",
      "description": "AI recommendations guide evacuation decisions and resource allocation"
    },
    {
      "from": "BuildingEvacuationTracker",
      "to": "EvacuationDashboard",
      "dataType": "Building[]",
      "description": "Building status updates flow to dashboard for progress tracking"
    },
    {
      "from": "UnitManagement",
      "to": "RoleBasedRouting",
      "dataType": "EmergencyUnit[]",
      "description": "Unit availability and status inform route optimization"
    },
    {
      "from": "SearchMarkings",
      "to": "MultiHazardMap",
      "dataType": "SearchMarking[]",
      "description": "Search and rescue markings overlay on hazard map"
    }
  ],
  "interactionPatterns": [
    {
      "name": "Map Exploration",
      "description": "Users explore hazards and evacuation routes through interactive map",
      "components": [
        "MultiHazardMap",
        "SimpleMapboxTest",
        "Enhanced3DTerrain"
      ],
      "userJourney": [
        "Load map",
        "Toggle hazard layers",
        "Zoom/pan to areas",
        "Select hazards",
        "View details"
      ]
    },
    {
      "name": "Evacuation Planning",
      "description": "Commanders plan and execute evacuation operations",
      "components": [
        "EvacuationDashboard",
        "AIPDecisionSupport",
        "RoleBasedRouting"
      ],
      "userJourney": [
        "View evacuation zones",
        "Analyze AI recommendations",
        "Plan routes",
        "Assign units",
        "Monitor progress"
      ]
    },
    {
      "name": "Real-time Monitoring",
      "description": "Continuous monitoring of evacuation progress and hazard changes",
      "components": [
        "BuildingEvacuationTracker",
        "EfficiencyMetrics",
        "WeatherPanel"
      ],
      "userJourney": [
        "Check building status",
        "Review metrics",
        "Monitor weather",
        "Update information",
        "Track progress"
      ]
    },
    {
      "name": "Unit Coordination",
      "description": "Emergency units coordinate and manage resources",
      "components": [
        "UnitManagement",
        "RoleBasedRouting",
        "DrillDownCapability"
      ],
      "userJourney": [
        "View unit status",
        "Assign tasks",
        "Optimize routes",
        "Track performance",
        "Analyze efficiency"
      ]
    },
    {
      "name": "Decision Support",
      "description": "AI-powered guidance for complex operational decisions",
      "components": [
        "AIPDecisionSupport",
        "TechnicalArchitecture",
        "ChallengeDemo"
      ],
      "userJourney": [
        "Query AI system",
        "Review recommendations",
        "Analyze alternatives",
        "Make decisions",
        "Track outcomes"
      ]
    }
  ]
}