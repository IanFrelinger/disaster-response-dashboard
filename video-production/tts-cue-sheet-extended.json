{
  "voice": "alloy",
  "total_duration": 345,
  "beats": [
    {
      "id": "intro_problem",
      "start": 0,
      "duration": 30,
      "text": "Hi, I'm Ian Frelinger. When disasters strike, every second counts. Today, emergency teams juggle separate maps, radios and spreadsheets. That fragmentation costs time, coordination and ultimately lives. I built this platform to put everything in one place and help commanders make faster, safer decisions."
    },
    {
      "id": "users_value",
      "start": 30,
      "duration": 30,
      "text": "This tool serves Incident Commanders, planners and dispatchers. On the Commander Dashboard, commanders set objectives; planners monitor progress; dispatchers update unit statuses. Everyone sees the same source of truth."
    },
    {
      "id": "data_flow_api",
      "start": 60,
      "duration": 45,
      "text": "Under the hood, we ingest data from NASA FIRMS, NOAA weather, 911 calls, population and traffic feeds. Foundry Functions fuse these feeds onto H3 hexagons (~174 m). We apply a machine‑learning model to predict fire spread over a two‑hour horizon and compute risk polygons. For routing, we use the A Star algorithm to build a hazard‑aware graph and apply vehicle‑specific constraints. The system delivers data via REST and WebSocket APIs—hazards, zones, routes, risk, evacuations, units and public‑safety alerts. This unified back‑end powers dashboards, mobile apps and the AI assistant."
    },
    {
      "id": "hazard_triage",
      "start": 105,
      "duration": 35,
      "text": "On the Live Map you can toggle layers—hazards, routes, units, evac zones—and zoom into a cluster. One click on a red marker reveals the hazard's intensity and estimated population at risk. This triage view tells us whether to monitor, shelter or evacuate."
    },
    {
      "id": "zones_buildings",
      "start": 140,
      "duration": 30,
      "text": "Back on the Dashboard, each card represents a zone. The progress bar shows evacuated versus in‑progress or refused buildings. A planner can scroll the building list to see which residents need special assistance and flag refusals so field teams can reattempt later."
    },
    {
      "id": "api_endpoints",
      "start": 170,
      "duration": 40,
      "text": "Our back‑end exposes clean endpoints: GET /api/hazards returns a summary, bounding box and risk distribution; GET /api/hazard_zones provides GeoJSON for mapping; POST /api/routes calculates an A Star path with metrics and safety scores; GET /api/risk assesses risk within a spatial buffer; GET /api/evacuations tracks zone‑level progress; GET/PUT /api/units monitors and updates unit status; and GET /api/public_safety delivers multilingual safety messages. All endpoints are backed by Foundry Functions with Input and Output decorators, so the same logic powers dashboards, notifications and our AI assistant."
    },
    {
      "id": "routing_concept",
      "start": 210,
      "duration": 40,
      "text": "Although route drawing isn't live yet, conceptually we compute safe paths by penalising road segments near hazards. A civilian profile uses a wide buffer; EMS chooses a balanced trade‑off; fire crews take direct paths; police escorts incorporate convoy rules. Each vehicle type has weight, height and clearance constraints. The result is a route that minimises risk and travel time."
    },
    {
      "id": "ai_support",
      "start": 250,
      "duration": 30,
      "text": "In the future, you'll be able to ask, 'What if we lose Highway 30?' The AI assistant will evaluate hazards, unit availability, traffic and population, then recommend the safest alternate route and staging locations. You can accept or adjust the recommendation, keeping the Incident Commander in control."
    },
    {
      "id": "reliability_security",
      "start": 280,
      "duration": 30,
      "text": "The system uses caching and graceful fallbacks to stay responsive under load. Inputs are validated and strongly typed; roles control write access; all actions are logged for audit. Spatial queries leverage H3 and R‑trees for speed, and the hazard cache invalidates every five minutes. WebSockets push updates to the UI so teams see changes instantly."
    },
    {
      "id": "impact_conclusion",
      "start": 310,
      "duration": 35,
      "text": "Combining everything into one interface cuts time‑to‑decision by over 40 percent and increases evacuation coordination by 60 percent. By democratising tools once reserved for senior leaders, we free everyone to focus on actions that save lives while keeping commanders at the centre. Thank you for watching. I'd love to discuss pilot projects or next steps."
    }
  ]
}
