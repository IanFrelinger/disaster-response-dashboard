"""Type stubs for palantir.aip."""

from typing import Any, Dict, List, Optional, Union, Callable

def get_client() -> Any: ...
def get_workspace() -> Any: ...
def get_dataset() -> Any: ...
def get_function() -> Any: ...
def get_ontology() -> Any: ...
def get_geocoding() -> Any: ...
def get_dataframe() -> Any: ...

class AIPClient:
    def get_workspace(self, workspace_id: str) -> Any: ...
    def get_dataset(self, dataset_id: str) -> Any: ...
    def get_function(self, function_id: str) -> Any: ...
    def get_ontology(self, ontology_id: str) -> Any: ...
    def get_geocoding(self) -> Any: ...
    def get_dataframe(self) -> Any: ...

class Workspace:
    def get_dataset(self, dataset_id: str) -> Any: ...
    def get_function(self, function_id: str) -> Any: ...
    def get_ontology(self, ontology_id: str) -> Any: ...

class Dataset:
    def read(self) -> Any: ...
    def write(self, data: Any) -> None: ...
    def query(self, query: str) -> Any: ...

class Function:
    def invoke(self, *args: Any, **kwargs: Any) -> Any: ...

class Ontology:
    def get_object_type(self, object_type: str) -> Any: ...
    def get_property_type(self, property_type: str) -> Any: ...

class Geocoding:
    def geocode(self, address: str) -> Any: ...
    def reverse_geocode(self, lat: float, lng: float) -> Any: ...

class DataFrame:
    def read(self) -> Any: ...
    def write(self, data: Any) -> None: ...
    def query(self, query: str) -> Any: ...
