[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "disaster-response-dashboard"
version = "1.0.0"
description = "Geospatial Disaster Response Dashboard"
authors = [{name = "Disaster Response Team"}]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "palantir-foundry-sdk>=2.0.0",
    "foundry-platform-sdk>=0.30.0",
    "foundry-transforms>=1.0.0",
    "geopandas>=0.14.0",
    "rasterio>=1.3.9",
    "shapely>=2.0.0",
    "pyproj>=3.6.0",
    "h3>=3.7.6",
    "osmnx>=1.9.0",
    "networkx>=3.2",
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    "xarray>=2023.0",
    "zarr>=2.16.0",
    "httpx>=0.25.0",
    "aiofiles>=23.0.0",
    "structlog>=23.0.0",
    "prometheus-client>=0.19.0",
    "click>=8.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
] 